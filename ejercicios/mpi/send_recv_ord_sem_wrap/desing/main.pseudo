procedure main(argc, argv[])
  declare mpi(argc, argv);
  declare rank := mpi.getProcessNumber();
  declare count := mpi.getProcessCount();
  declare previous := (count + rank - 1) % count;
  declare next := (rank + 1) % count;

  declare can_print := true;
  if (rank > 0) {
    mpi.receive(can_print, previous);
  }
  std::cout << "Hello from main thread of process " << rank << " of "
    << count << " on " << mpi.getHostname() << std::endl;
  mpi.send(can_print, next);
  } catch (const std::exception& error) {
  std::cerr << "error: " << error.what() << std::endl;
  }
end procedure
